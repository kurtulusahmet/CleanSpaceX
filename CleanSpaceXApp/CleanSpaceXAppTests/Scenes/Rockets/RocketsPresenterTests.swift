//
//  RocketsPresenterTests.swift
//  CleanSpaceXApp
//
//  Created by Kurtuluş Ahmet TEMEL on 30.04.2020.
//  Copyright (c) 2020 Kurtuluş Ahmet TEMEL. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanSpaceXApp
import XCTest

class RocketsPresenterTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: RocketsPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupRocketsPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupRocketsPresenter() {
        sut = RocketsPresenter()
    }
    
    // MARK: Test doubles
    
    class RocketsDisplayLogicSpy: RocketsDisplayLogic {
        var displayFetchedRocketsCalled = false
        var displayRocketDetailCalled = false
        
        func displayFetchedRockets(viewModel: Rockets.FetchRockets.ViewModel) {
            displayFetchedRocketsCalled = true
        }
        
        func displayRocketDetail() {
            displayRocketDetailCalled = true
        }
    }
    
    // MARK: Tests
    
    func testPresentRockets() {
        // Given
        let spy = RocketsDisplayLogicSpy()
        sut.viewController = spy
        let rockets = [RocketsResponseModel(id: 1,
                                            flickrImages: ["https://www.spacex.com/sites/spacex/files/styles/media_gallery_large/public/2009_-_01_liftoff_south_full_wide_ro8a1280_edit.jpg?itok=8loiSGt1"],
                                            wikipedia: "https://en.wikipedia.org/wiki/Falcon_1",
                                            rocketDescription: "This is Falcon 1",
                                            rocketID: "falcon1", rocketName: "Falcon 1", rocketType: "rocket")]
        let response = Rockets.FetchRockets.Response(rockets: rockets)
        
        // When
        sut.presentRockets(response: response)
        
        // Then
        XCTAssertTrue(spy.displayFetchedRocketsCalled, "presentSomething(response:) should ask the view controller to display the result")
    }
}
