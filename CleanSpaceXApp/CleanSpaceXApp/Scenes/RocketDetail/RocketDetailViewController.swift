//
//  RocketDetailViewController.swift
//  CleanSpaceXApp
//
//  Created by Kurtuluş Ahmet TEMEL on 18.04.2020.
//  Copyright (c) 2020 Kurtuluş Ahmet TEMEL. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RocketDetailDisplayLogic: class {
    func displayFetchedRocket(viewModel: RocketDetail.FetchRocket.ViewModel)
}

class RocketDetailViewController: UIViewController, RocketDetailDisplayLogic {
    var interactor: RocketDetailBusinessLogic?
    var router: (NSObjectProtocol & RocketDetailRoutingLogic & RocketDetailDataPassing)?
    
    @IBOutlet weak var rocketDescriptionLabel: UILabel!
    @IBOutlet weak var rocketNameLabel: UILabel!
    @IBOutlet weak var rocketImage: UIImageView!
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = RocketDetailInteractor()
        let presenter = RocketDetailPresenter()
        let router = RocketDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchRocket()
    }
    
    // MARK: Fetch Rocket
    func fetchRocket(){
        let request = RocketDetail.FetchRocket.Request()
        interactor?.fetchRocket(request: request)
    }
    
    func displayFetchedRocket(viewModel: RocketDetail.FetchRocket.ViewModel) {
        self.rocketNameLabel.isHidden = false
        self.rocketDescriptionLabel.isHidden = false
        self.rocketImage.isHidden = false
        self.rocketNameLabel.text = viewModel.displayedRocket.rocketName
        self.rocketImage.kf.setImage(with: URL(string: viewModel.displayedRocket.rocketImage))
        self.rocketDescriptionLabel.text = viewModel.displayedRocket.rocketDescription
    }
}
